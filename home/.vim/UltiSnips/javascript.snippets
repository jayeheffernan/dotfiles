snippet @p "jsdoc style param"
@param {${2:type}} ${1:name} ${3:description}
endsnippet

snippet @r "jsdoc style return"
@return {${1:type}} ${2:description}
endsnippet

snippet r "require" b
const $1 = require('${1:module}');
endsnippet

snippet json "JSON stringify a thing" i
JSON.stringify(${VISUAL}$0, null, 4)
endsnippet

snippet prom "promise constructor" w
new Promise((resolve, reject) => {
	${VISUAL}$0
});
endsnippet

snippet before "mocha before" b
before(function(done) {
	${0:throw new Error("not yet implemented");}
});
endsnippet

snippet after "mocha after" b
after(function(done) {
	${0:throw new Error("not yet implemented");}
});
endsnippet

snippet d "mocha describe" b
describe('${1:what it is}', function() {

	${VISUAL}$0

});
endsnippet

snippet dv "mocha describe visual" b
describe('${VISUAL}', function() {

	$0

});
endsnippet

snippet it "mocha it" b
it('${1:what it does}', function(done) {
	${0:throw new Error("not yet implemented");}
});
endsnippet

snippet /// "Big comment" b
//******************************************************************************
// $0
//******************************************************************************
endsnippet

snippet e "expect" b
expect($1, ${2:'$1'}).to.$0;
endsnippet

snippet ce "console.error"
console.error($0);
endsnippet

snippet cl "console.log"
console.log($0);
endsnippet

snippet cls "console.log a string"
console.log('${0:string}');
endsnippet

snippet clt "console.log a template literal"
console.log(\`${0:string}\`);
endsnippet

snippet $ "substitution stuff for template literal"
${$1}$0
endsnippet

snippet cll "console.log an expression"
console.log(\`$1: ${${1:expr}}\`)$0
endsnippet

snippet cllj "console.log an expression JSON stringified"
console.log(\`$1: ${JSON.stringify(${1:expr}, null, 4)}\`)$0
endsnippet

snippet clj "console.log some json"
console.log(JSON.stringify($0, null, 4))
endsnippet

snippet	=> "arrow function"
($1) => {
	$0
}
endsnippet

snippet	try "try catch"
try {
	$0
} catch (e) {

}
endsnippet

snippet field "Conctr field JSON"
{
    access_level: ["admin"],
    reference: "${2:`!p snip.rv='_'.join(t[1].lower().split())`}",
    title: "${1:Title}",
    type: "${3:number}",
},$0
endsnippet

snippet if "if" b
if ($1) {
    $0
}
endsnippet
